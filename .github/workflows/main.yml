# .github/workflows/ci-cd.yaml
name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/node-k8s-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/node-k8s-app:latest
  
  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push # This job depends on the 'build-and-push' job
    steps:
    # Step 4 & 5: Instal azure cli and kubectl
    - name: Run Azure CLI command
      uses: azure/cli@v1
      with:
        azcliversion: 2.53.0 # Optional: specify version or omit
        inlineScript: |
          az --version

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      
    # Step 6: Authenticate with Azure and AKS
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      run: |
        az aks get-credentials --resource-group AppDeployment --name appclusterdeploy
    # Step 7a : Verify the path exists
    - name: Verify directory structure
      run: |
          ls -la node-k8s-app
          ls -la node-k8s-app/k8s
    # Step 7: Deploy to AKS (Update the deployment with the new image)
    - name: Deploy to AKS
      run: | 
        cd node-k8s-app/k8s
        kubectl apply -f deployment.yaml
        

# kubectl set image deployment/node-k8s-app node-k8s-app=${{ secrets.DOCKER_USERNAME }}/node-k8s-app:${{ github.sha }}
